package christian_ragonese.tools;

import christian_ragonese.entities.User;
import kong.unirest.core.JsonNode;
import kong.unirest.core.Unirest;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import kong.unirest.core.HttpResponse;


@Component
@Slf4j
public class MailgunSender {
    private String apiKey;
    private String domain;
    private String senderEmail;

    public MailgunSender(@Value("${mailgun.api.key}") String apiKey,
                         @Value("${mailgun.domain.name}") String domain,
                         @Value("${mailgun.sender.email}") String senderEmail) {
        this.apiKey = apiKey;
        this.domain = domain;
        this.senderEmail = senderEmail;
    }

    public void sendContactEmail(User recipient) {
        log.info("Sending email to: {}", recipient.getEmail());

        String subject = "Important communication from Epic Energy Services for " + recipient.getEmail();
        String textBody = String.format(
                "Dear %s %s,\n\n" +
                        "We are writing to you regarding your company, %s.\n\n" +
                        "This is a test email generated by our CRM system, give us your money!\n\n" +
                        "Grazie e arrivederci,\n" +
                        "The Epic Energy Services team",
                recipient.getName(),
                recipient.getSurname()
        );
        try {
            HttpResponse<JsonNode> response = Unirest.post("https://api.mailgun.net/v3/" + this.domain + "/messages")
                    .basicAuth("api", this.apiKey)
                    .queryString("from", this.senderEmail)
                    .queryString("to", recipient.getEmail()) // verified email
                    .queryString("subject", subject)
                    .queryString("text", textBody)
                    .asJson();

            if (response.isSuccess()) {
                log.info("Email sent successfully! Reply from Mailgun: {}", response.getBody().toString());
            } else {
                log.error("Error sending email. Status: {}, Error: {}", response.getStatus(), response.getBody().toString());
            }
        } catch (Exception e) {
            log.error("Unexpected error while sending email to {}", recipient.getEmail(), e);
        }
    }
}
